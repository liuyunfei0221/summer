<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.business.repository.mapper.ArticleMapper">

  <resultMap id="BaseResultMap" type="com.blue.business.repository.entity.Article">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="author_id" jdbcType="BIGINT" property="authorId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="favorites" jdbcType="BIGINT" property="favorites" />
    <result column="readings" jdbcType="BIGINT" property="readings" />
    <result column="comments" jdbcType="BIGINT" property="comments" />
    <result column="likes" jdbcType="BIGINT" property="likes" />
    <result column="boring" jdbcType="BIGINT" property="boring" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blue.business.repository.entity.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <sql id="Base_Column_List">
    id, author_id, type, title, author, favorites, readings, comments, likes, boring, 
    status, create_time, update_time
  </sql>

  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.blue.business.repository.entity.Article">
    insert into article (id, author_id, type, 
      title, author, favorites, 
      readings, comments, likes, 
      boring, status, create_time, 
      update_time, content)
    values (#{id,jdbcType=BIGINT}, #{authorId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, 
      #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{favorites,jdbcType=BIGINT}, 
      #{readings,jdbcType=BIGINT}, #{comments,jdbcType=BIGINT}, #{likes,jdbcType=BIGINT}, 
      #{boring,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.blue.business.repository.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="favorites != null">
        favorites,
      </if>
      <if test="readings != null">
        readings,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="boring != null">
        boring,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="favorites != null">
        #{favorites,jdbcType=BIGINT},
      </if>
      <if test="readings != null">
        #{readings,jdbcType=BIGINT},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=BIGINT},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=BIGINT},
      </if>
      <if test="boring != null">
        #{boring,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.blue.business.repository.entity.Article">
    update article
    <set>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="favorites != null">
        favorites = #{favorites,jdbcType=BIGINT},
      </if>
      <if test="readings != null">
        readings = #{readings,jdbcType=BIGINT},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=BIGINT},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=BIGINT},
      </if>
      <if test="boring != null">
        boring = #{boring,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blue.business.repository.entity.Article">
    update article
    set author_id = #{authorId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      favorites = #{favorites,jdbcType=BIGINT},
      readings = #{readings,jdbcType=BIGINT},
      comments = #{comments,jdbcType=BIGINT},
      likes = #{likes,jdbcType=BIGINT},
      boring = #{boring,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.blue.business.repository.entity.Article">
    update article
    set author_id = #{authorId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      favorites = #{favorites,jdbcType=BIGINT},
      readings = #{readings,jdbcType=BIGINT},
      comments = #{comments,jdbcType=BIGINT},
      likes = #{likes,jdbcType=BIGINT},
      boring = #{boring,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>