<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.secure.repository.mapper.CredentialMapper">
    <resultMap id="BaseResultMap" type="com.blue.secure.repository.entity.Credential">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="identity" jdbcType="VARCHAR" property="identity"/>
        <result column="login_type" jdbcType="VARCHAR" property="loginType"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , member_id, identity, login_type, status, password, create_time, update_time
    </sql>

    <insert id="insert" parameterType="com.blue.secure.repository.entity.Credential">
        insert into credential (id, member_id, identity,
                                login_type, status, password,
                                create_time, update_time)
        values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{identity,jdbcType=VARCHAR},
                #{loginType,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{password,jdbcType=VARCHAR},
                #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.secure.repository.entity.Credential">
        insert into credential
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="identity != null">
                identity,
            </if>
            <if test="loginType != null">
                login_type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                #{loginType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.secure.repository.entity.Credential">
        update credential
        set member_id   = #{memberId,jdbcType=BIGINT},
            identity    = #{identity,jdbcType=VARCHAR},
            login_type  = #{loginType,jdbcType=VARCHAR},
            status      = #{status,jdbcType=TINYINT},
            password    = #{password,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.secure.repository.entity.Credential">
        update credential
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="identity != null">
                identity = #{identity,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                login_type = #{loginType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from credential
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from credential
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectCredentialByIdentityAndLoginType" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        credential FORCE INDEX(idx_identity_type)
        WHERE
        identity = #{identity,jdbcType=VARCHAR}
        AND
        login_type = #{loginType,jdbcType=VARCHAR}
        LIMIT 1;
    </select>

</mapper>