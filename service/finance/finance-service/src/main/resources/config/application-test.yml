server:
  address: 127.0.0.1
  port: 29000
  netty:
    connection-timeout: 6s
    h2c-max-content-length: 0B
    initial-buffer-size: 128B
    max-chunk-size: 8KB
    max-initial-line-length: 4KB
    validate-headers: true
  http2:
    enabled: true
  error:
    path: /error
#  ssl:
#    client-auth: need
#    ciphers: [ ]
#    enabled-protocols: [ ]
#    key-alias:
#    key-password:
#    key-store:
#    key-store-password:
#    key-store-type:
#    key-store-provider:
#    trust-store:
#    trust-store-password:
#    trust-store-type:
#    trust-store-provider:
#    protocol: TLS


eureka:
  instance:
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 60
    instance-id: ${server.address}:${spring.application.name}:${server.port}
    hostname: ${server.address}
  client:
    service-url:
      defaultZone: http://blue:LiuZhiyi20200805@101.43.192.155:3000/eureka/
    registry-fetch-interval-seconds: 60


data:
  shardingDatabases:
    - url: jdbc:mysql://101.43.192.155:3306/finance_0
      dataBaseConf: useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: root
      password: LiuZhiyi20200805
      driverClassName: com.mysql.cj.jdbc.Driver
      connectionTimeout: 120000
      maxLifetime: 1800000
      maximumPoolSize: 4
      minimumIdle: 2
      idleTimeout: 5
      testQuery: SELECT 1 FROM DUAL
      readOnly: false
      autoCommit: false

    - url: jdbc:mysql://43.138.44.171:3306/finance_1
      dataBaseConf: useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: root
      password: LiuZhiyi20200805
      driverClassName: com.mysql.cj.jdbc.Driver
      connectionTimeout: 120000
      maxLifetime: 1800000
      maximumPoolSize: 4
      minimumIdle: 2
      idleTimeout: 5
      testQuery: SELECT 1 FROM DUAL
      readOnly: false
      autoCommit: false
  shardingTables:
    - tableName: finance_account
      shardingColumn: id

    - tableName: organization
      shardingColumn: id

    - tableName: dynamic_handler
      shardingColumn: id

    - tableName: dynamic_resource
      shardingColumn: id
  shardingTableSizePerDataBase: 2
  dataCenterToDatabaseMappings:
    - id: 0
      index: 0

    - id: 1
      index: 1
  workerToTableMappings:
    - id: 0
      index: 0

    - id: 1
      index: 1
  forceWriteTables:
    - tableName: undo_log
      dataCenter: 0
      worker: 0
  broadcastTables: [ ]
  safeRowBoundsEnabled: false
  safeResultHandlerEnabled: false
  mapUnderscoreToCamelCase: false
  aggressiveLazyLoading: false
  multipleResultSetsEnabled: false
  useGeneratedKeys: false
  useColumnLabel: true
  cacheEnabled: false
  callSettersOnNulls: false
  useActualParamName: false
  returnInstanceForEmptyRow: false
  shrinkWhitespacesInSql: false
  nullableOnForEach: false
  localCacheScope: SESSION
  jdbcTypeForNull:
  defaultStatementTimeout: 30000
  defaultFetchSize: 100
  defaultResultSetType: DEFAULT
  defaultExecutorType: BATCH
  autoMappingBehavior: FULL
  autoMappingUnknownColumnBehavior: FAILING
  lazyLoadingEnabled: false
  mapperLocation: classpath:mapper/*.xml
  props:
    sql.show: true
    sql.simple: false
    executor.size: 128
    max.connections.size.per.query: 2
    check.table.metadata.enabled: true
    query.with.cipher.column: false
    xa.transaction.manager.type: Atomikos
  debugLogging: true


identity:
  dataCenter: 0
  worker: 0
  serviceName: blue-finance
  bootSeconds: 1618790400
  bufferPower: 3
  paddingFactor: 50
  paddingCorePoolSize: 1
  paddingMaximumPoolSize: 2
  keepAliveSeconds: 128
  paddingBlockingQueueSize: 1024
  paddingScheduled: true
  paddingScheduledCorePoolSize: 2
  paddingScheduledInitialDelayMillis: 5000
  paddingScheduledDelayMillis: 15000


dynamicapi:
  path: /blue-finance/dynamic
  blockingMillis: 5000


seata:
  enabled: true
  application-id: finance_trans
  tx-service-group: summer_group
  enable-auto-data-source-proxy: false
  data-source-proxy-mode: AT
  use-jdk-proxy: false
  scan-packages: [ com.blue.finance.service.impl ]
  excludes-for-scanning:
  excludes-for-auto-proxying: com.zaxxer.hikari.HikariDataSource
  access-key:
  secret-key:
  client:
    rm:
      async-commit-buffer-limit: 10000
      report-retry-count: 5
      table-meta-check-enable: false
      table-meta-checker-interval: 60000
      report-success-enable: false
      saga-branch-register-enable: false
      saga-json-parser: jackson
      saga-retry-persist-mode-update: false
      saga-compensate-persist-mode-update: false
      tcc-action-interceptor-order: -2147482648
      branch-execution-timeout-XA: 60000
      connection-two-phase-hold-timeout-XA: 60000
      sql-parser-type: druid
      lock:
        retry-interval: 10
        retry-times: 30
        retry-policy-branch-rollback-on-conflict: true
    tm:
      commit-retry-count: 5
      rollback-retry-count: 5
      default-global-transaction-timeout: 60000
      degrade-check: false
      degrade-check-allow-times: 10
      degrade-check-period: 2000
      interceptor-order: -2147482648
    undo:
      data-validation: true
      log-serialization: jackson
      log-table: undo_log
      only-care-update-columns: true
      compress:
        enable: true
        type: zip
        threshold: 64k
    load-balance:
      type: RandomLoadBalance
      virtual-nodes: 10
  service:
    vgroup-mapping:
      summer_group: default
    group-list:
      default: 43.138.44.171:8091
    enable-degrade: false
    disable-global-transaction: false
  log:
    exception-rate: 100
  shutdown:
    wait: 3
  thread-factory:
    boss-thread-prefix: NettyBoss
    worker-thread-prefix: NettyServerNIOWorker
    server-executor-thread-prefix: NettyServerBizHandler
    share-boss-worker: false
    client-selector-thread-prefix: NettyClientSelector
    client-selector-thread-size: 1
    client-worker-thread-prefix: NettyClientWorkerThread
    boss-thread-size: 1
    worker-thread-size: default
  transport:
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: false
    enable-tm-client-batch-send-request: false
    enable-rm-client-batch-send-request: false
    enable-tc-server-batch-send-response: false
    rpc-rm-request-timeout: 60000
    rpc-tm-request-timeout: 60000
    rpc-tc-request-timeout: 60000
  config:
    custom:
      name: ""
    type: zk
    zk:
      server-addr: 43.138.44.171:2181
      session-timeout: 60000
      connect-timeout: 60000
      username: "blue"
      password: "LiuZhiyi20200805"
      nodePath: /seata/seata.properties
  registry:
    custom:
      name: ""
    type: zk
    zk:
      cluster: default
      server-addr: 43.138.44.171:2181
      session-timeout: 60000
      connect-timeout: 60000
      username: "blue"
      password: "LiuZhiyi20200805"


cache:
  serverMode: SINGLE
  nodes: [ 172.20.20.2:6379,172.20.20.2:6380,172.20.20.3:6379,172.20.20.3:6380,172.20.20.4:6379,172.20.20.4:6380 ]
  host: 43.138.111.53
  port: 6379
  password: LiuZhiyi20200805
  maxRedirects: 4
  minIdle: 4
  maxIdle: 64
  maxTotal: 128
  maxWaitMillis: 16
  autoReconnect: true
  bufferUsageRatio: 32.0
  cancelCommandsOnReconnectFailure: false
  pingBeforeActivateConnection: false
  requestQueueSize: 64
  publishOnScheduler: true
  tcpNoDelay: true
  connectTimeout: 10
  keepAlive: false
  suspendReconnectOnProtocolFailure: false
  fixedTimeout: 4
  commandTimeout: 4
  shutdownTimeout: 8
  shutdownQuietPeriod: 4
  shareNativeConnection: false
  entryTtl: 60


executor:
  corePoolSize: 4
  maximumPoolSize: 8
  keepAliveSeconds: 64
  blockingQueueCapacity: 128
  threadNamePre: blue-summer


scheduler:
  threadCap: 4
  queuedTaskCap: 4096
  threadNamePre: blue-summer-scheduler
  ttlSeconds: 128


curator:
  connectString: 43.138.44.171:2181
  connectionTimeoutMs: 60000
  sessionTimeoutMs: 60000
  maxCloseWaitMs: 12000
  namespace: finance
  retryBaseSleepTimeMs: 3000
  retryMaxSleepTimeMs: 5000
  retryMaxRetries: 2


redisson:
  serverMode: SINGLE
  nodes: [ 172.20.20.2:6379,172.20.20.2:6380,172.20.20.3:6379,172.20.20.3:6380,172.20.20.4:6379,172.20.20.4:6380 ]
  host: 43.138.111.53
  port: 6379
  password: LiuZhiyi20200805
  scanInterval: 8000
  checkSlotsCoverage: false
  tcpNoDelay: true
  masterConnectionMinimumIdleSize: 2
  slaveConnectionMinimumIdleSize: 2
  masterConnectionPoolSize: 2
  slaveConnectionPoolSize: 2
  subscriptionConnectionMinimumIdleSize: 2
  subscriptionConnectionPoolSize: 2
  subscriptionsPerConnection: 2
  subscriptionMode: MASTER
  timeout: 60000
  connectTimeout: 60000
  idleConnectionTimeout: 32000
  retryAttempts: 2
  retryInterval: 4000
  keepAlive: true
  dnsMonitoringInterval: -1
  pingConnectionInterval: 300000
  executorCorePoolSize: 4
  executorMaximumPoolSize: 8
  executorKeepAliveSeconds: 64
  executorBlockingQueueCapacity: 128
  maxTryLockWaitingMillis: 10000


rest:
  maxConnections: 64
  workerCount: 64
  useGlobalResources: false
  connectTimeoutMillis: 7000
  useTcpNoDelay: false
  protocols: [ HTTP11,H2,H2C ]
  responseTimeoutMillis: 3000
  readTimeoutMillis: 3000
  writeTimeoutMillis: 3000
  maxByteInMemorySize: 1048576


dubbo:
  registry:
    id: summer-registry
    client: curator
    protocol: zookeeper
    address: zookeeper://43.138.44.171
    port: 2181
    username: blue
    password: LiuZhiyi20200805
    file: /usr/env/log/dubbo/finance/registry.properties
    check: false
    timeout: 60000
    simplified: false
#  metadata-report:
#    address: zookeeper://43.138.44.171
#    port: 2181
#    username: blue
#    password: LiuZhiyi20200805
#    timeout: 120000
#    default: true
#    check: false
  application:
    id: summer-finance
    name: summer-finance
    owner: blue
    organization: blue
    shutwait: 20s
    enable-file-cache: false
  protocol:
    name: dubbo
    host: localhost
    port: 30000
    accesslog: /usr/env/log/dubbo/finance/access.log
  provider:
    retries: 0
    timeout: 10000
    loadbalance: random
    filter: -exception
  consumer:
    retries: 0
    timeout: 10000
    loadbalance: random
    check: false


debug: false