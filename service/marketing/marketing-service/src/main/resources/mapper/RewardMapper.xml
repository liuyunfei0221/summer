<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.marketing.repository.mapper.RewardMapper">
    <resultMap id="BaseResultMap" type="com.blue.marketing.repository.entity.Reward">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="data" jdbcType="VARCHAR" property="data"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
        <result column="updater" jdbcType="BIGINT" property="updater"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , name, detail, link, type, data, status, create_time, update_time, creator, updater
    </sql>

    <insert id="insert" parameterType="com.blue.marketing.repository.entity.Reward">
        insert into reward (id, name, detail,
                            link, type, data, status,
                            create_time, update_time, creator,
                            updater)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR},
                #{link,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{data,jdbcType=VARCHAR},
                #{status,jdbcType=TINYINT},
                #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT},
                #{updater,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.marketing.repository.entity.Reward">
        insert into reward
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="detail != null">
                detail,
            </if>
            <if test="link != null">
                link,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="data != null">
                data,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="updater != null">
                updater,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="data != null">
                #{data,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=BIGINT},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.marketing.repository.entity.Reward">
        update reward
        set name        = #{name,jdbcType=VARCHAR},
            detail      = #{detail,jdbcType=VARCHAR},
            link        = #{link,jdbcType=VARCHAR},
            type        = #{type,jdbcType=TINYINT},
            data        = #{data,jdbcType=VARCHAR},
            status      = #{status,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=BIGINT},
            creator     = #{creator,jdbcType=BIGINT},
            updater     = #{updater,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.marketing.repository.entity.Reward">
        update reward
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="data != null">
                data = #{data,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=BIGINT},
            </if>
            <if test="updater != null">
                updater = #{updater,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from reward
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reward
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="select" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reward
    </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reward
        WHERE
        id IN
        <foreach collection="ids" open="(" close=")" separator="," item="id" index="index">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

    <sql id="Reward_Conditions">
        <if test="rewardCondition != null">
            <where>
                <if test="rewardCondition.id != null">
                    AND
                    id = #{rewardCondition.id,jdbcType=BIGINT}
                </if>
                <if test="rewardCondition.nameLike != null and rewardCondition.nameLike != ''">
                    AND
                    name LIKE #{rewardCondition.nameLike,jdbcType=VARCHAR}
                </if>
                <if test="rewardCondition.link != null and rewardCondition.link != ''">
                    AND
                    link = #{rewardCondition.link,jdbcType=VARCHAR}
                </if>
                <if test="rewardCondition.type != null">
                    AND
                    type = #{rewardCondition.type,jdbcType=TINYINT}
                </if>
                <if test="rewardCondition.status != null">
                    AND
                    status = #{rewardCondition.status,jdbcType=TINYINT}
                </if>
                <if test="rewardCondition.createTimeBegin != null">
                    AND
                    create_time &gt;= #{rewardCondition.createTimeBegin,jdbcType=BIGINT}
                </if>
                <if test="rewardCondition.createTimeEnd != null">
                    AND
                    create_time &lt;= #{rewardCondition.createTimeEnd,jdbcType=BIGINT}
                </if>
                <if test="rewardCondition.updateTimeBegin != null">
                    AND
                    update_time &gt;= #{rewardCondition.updateTimeBegin,jdbcType=BIGINT}
                </if>
                <if test="rewardCondition.updateTimeEnd != null">
                    AND
                    update_time &lt;= #{rewardCondition.updateTimeEnd,jdbcType=BIGINT}
                </if>
            </where>
        </if>
    </sql>

    <select id="selectByLimitAndCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reward
        <include refid="Reward_Conditions"/>
        <if test="rewardCondition != null and rewardCondition.sortAttribute != null and rewardCondition.sortAttribute != '' and rewardCondition.sortType != null and rewardCondition.sortType != ''">
            ORDER BY
            ${rewardCondition.sortAttribute} ${rewardCondition.sortType}
        </if>
        LIMIT #{limit,jdbcType=BIGINT},#{rows,jdbcType=BIGINT}
    </select>

    <select id="countByCondition" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM
        reward
        <include refid="Reward_Conditions"/>
    </select>

    <select id="selectByUnique" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reward FORCE INDEX(idx_name_type)
        WHERE
        `name` = #{name,jdbcType=VARCHAR}
        AND
        type = #{type,jdbcType=TINYINT}
    </select>

</mapper>