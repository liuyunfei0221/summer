<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.risk.repository.mapper.RiskHitRecordMapper">
    <resultMap id="BaseResultMap" type="com.blue.risk.repository.entity.RiskHitRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="cursor" jdbcType="BIGINT" property="cursor"/>
        <result column="data_event_type" jdbcType="VARCHAR" property="dataEventType"/>
        <result column="data_event_op_type" jdbcType="VARCHAR" property="dataEventOpType"/>
        <result column="stamp" jdbcType="BIGINT" property="stamp"/>
        <result column="create_date" jdbcType="VARCHAR" property="createDate"/>
        <result column="method" jdbcType="VARCHAR" property="method"/>
        <result column="uri" jdbcType="VARCHAR" property="uri"/>
        <result column="real_uri" jdbcType="VARCHAR" property="realUri"/>
        <result column="request_body" jdbcType="VARCHAR" property="requestBody"/>
        <result column="request_extra" jdbcType="VARCHAR" property="requestExtra"/>
        <result column="response_status" jdbcType="INTEGER" property="responseStatus"/>
        <result column="response_body" jdbcType="VARCHAR" property="responseBody"/>
        <result column="response_extra" jdbcType="VARCHAR" property="responseExtra"/>
        <result column="request_id" jdbcType="VARCHAR" property="requestId"/>
        <result column="metadata" jdbcType="VARCHAR" property="metadata"/>
        <result column="jwt" jdbcType="VARCHAR" property="jwt"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="role_ids" jdbcType="ARRAY" property="roleIds"
                typeHandler="com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler"/>
        <result column="credential_type" jdbcType="VARCHAR" property="credentialType"/>
        <result column="device_type" jdbcType="VARCHAR" property="deviceType"/>
        <result column="login_time" jdbcType="BIGINT" property="loginTime"/>
        <result column="client_ip" jdbcType="VARCHAR" property="clientIp"/>
        <result column="user_agent" jdbcType="VARCHAR" property="userAgent"/>
        <result column="sec_key" jdbcType="VARCHAR" property="secKey"/>
        <result column="request_un_decryption" jdbcType="INTEGER" property="requestUnDecryption"/>
        <result column="response_un_encryption" jdbcType="INTEGER" property="responseUnEncryption"/>
        <result column="existence_request_body" jdbcType="INTEGER" property="existenceRequestBody"/>
        <result column="existence_response_body" jdbcType="INTEGER" property="existenceResponseBody"/>
        <result column="duration_seconds" jdbcType="INTEGER" property="durationSeconds"/>
        <result column="resource_id" jdbcType="BIGINT" property="resourceId"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
        <result column="relative_uri" jdbcType="VARCHAR" property="relativeUri"/>
        <result column="absolute_uri" jdbcType="VARCHAR" property="absoluteUri"/>
        <result column="relation_view" jdbcType="VARCHAR" property="relationView"/>
        <result column="authenticate" jdbcType="INTEGER" property="authenticate"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="hit_type" jdbcType="INTEGER" property="hitType"/>
        <result column="illegal_expires_second" jdbcType="BIGINT" property="illegalExpiresSecond"/>
        <result column="remove_session" jdbcType="INTEGER" property="removeSession"/>
        <result column="invalid_status" jdbcType="INTEGER" property="invalidStatus"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , "cursor", data_event_type, data_event_op_type, stamp, create_date, method, uri, real_uri, request_body, request_extra, response_status, response_body, response_extra, request_id, metadata, jwt, member_id,
        role_ids, credential_type, device_type, login_time, client_ip, user_agent, sec_key, request_un_decryption, response_un_encryption, existence_request_body, existence_response_body, duration_seconds,
        resource_id, "module", relative_uri, absolute_uri, relation_view, authenticate, type, name, hit_type, illegal_expires_second, remove_session, invalid_status
    </sql>

    <insert id="insert" parameterType="com.blue.risk.repository.entity.RiskHitRecord">
        insert into risk_hit_record (
        <include refid="Base_Column_List"/>
        )
        values
        (#{id,jdbcType=BIGINT}, #{cursor,jdbcType=BIGINT}, #{dataEventType,jdbcType=VARCHAR},
        #{dataEventOpType,jdbcType=VARCHAR}, #{stamp,jdbcType=BIGINT},
        #{createDate,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR},
        #{uri,jdbcType=VARCHAR}, #{realUri,jdbcType=VARCHAR},
        #{requestBody,jdbcType=VARCHAR}, #{requestExtra,jdbcType=VARCHAR},
        #{responseStatus,jdbcType=INTEGER}, #{responseBody,jdbcType=VARCHAR},
        #{responseExtra,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, #{metadata,jdbcType=VARCHAR},
        #{jwt,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT},
        #{roleIds,jdbcType=ARRAY,typeHandler=com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler},
        #{credentialType,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR},
        #{loginTime,jdbcType=BIGINT}, #{clientIp,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR},
        #{secKey,jdbcType=VARCHAR}, #{requestUnDecryption,jdbcType=INTEGER},
        #{responseUnEncryption,jdbcType=INTEGER}, #{existenceRequestBody,jdbcType=INTEGER},
        #{existenceResponseBody,jdbcType=INTEGER}, #{durationSeconds,jdbcType=INTEGER},
        #{resourceId,jdbcType=BIGINT}, #{module,jdbcType=VARCHAR},
        #{relativeUri,jdbcType=VARCHAR}, #{absoluteUri,jdbcType=VARCHAR},
        #{relationView,jdbcType=VARCHAR}, #{authenticate,jdbcType=INTEGER},
        #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{hitType,jdbcType=INTEGER},
        #{illegalExpiresSecond,jdbcType=BIGINT}, #{removeSession,jdbcType=INTEGER},
        #{invalidStatus,jdbcType=INTEGER})
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        <if test="list != null and list.size > 0">
            INSERT INTO risk_hit_record (
            <include refid="Base_Column_List"/>
            ) values
            <foreach collection="list" index="index" item="item" separator=",">
                (#{item.id,jdbcType=BIGINT}, #{item.cursor,jdbcType=BIGINT}, #{item.dataEventType,jdbcType=VARCHAR},
                #{item.dataEventOpType,jdbcType=VARCHAR}, #{item.stamp,jdbcType=BIGINT},
                #{item.createDate,jdbcType=VARCHAR}, #{item.method,jdbcType=VARCHAR},
                #{item.uri,jdbcType=VARCHAR}, #{item.realUri,jdbcType=VARCHAR},
                #{item.requestBody,jdbcType=VARCHAR}, #{item.requestExtra,jdbcType=VARCHAR},
                #{item.responseStatus,jdbcType=INTEGER}, #{item.responseBody,jdbcType=VARCHAR},
                #{item.responseExtra,jdbcType=VARCHAR}, #{item.requestId,jdbcType=VARCHAR},
                #{item.metadata,jdbcType=VARCHAR}, #{item.jwt,jdbcType=VARCHAR}, #{item.memberId,jdbcType=BIGINT},
                #{item.roleIds,jdbcType=ARRAY,typeHandler=com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler},
                #{item.credentialType,jdbcType=VARCHAR}, #{item.deviceType,jdbcType=VARCHAR},
                #{item.loginTime,jdbcType=BIGINT}, #{item.clientIp,jdbcType=VARCHAR},
                #{item.userAgent,jdbcType=VARCHAR}, #{item.secKey,jdbcType=VARCHAR},
                #{item.requestUnDecryption,jdbcType=INTEGER}, #{item.responseUnEncryption,jdbcType=INTEGER},
                #{item.existenceRequestBody,jdbcType=INTEGER}, #{item.existenceResponseBody,jdbcType=INTEGER},
                #{item.durationSeconds,jdbcType=INTEGER}, #{item.resourceId,jdbcType=BIGINT},
                #{item.module,jdbcType=VARCHAR},
                #{item.relativeUri,jdbcType=VARCHAR}, #{item.absoluteUri,jdbcType=VARCHAR},
                #{item.relationView,jdbcType=VARCHAR}, #{item.authenticate,jdbcType=INTEGER},
                #{item.type,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.hitType,jdbcType=INTEGER},
                #{item.illegalExpiresSecond,jdbcType=BIGINT}, #{item.removeSession,jdbcType=INTEGER},
                #{item.invalidStatus,jdbcType=INTEGER})
            </foreach>
        </if>
    </insert>

    <insert id="insertSelective" parameterType="com.blue.risk.repository.entity.RiskHitRecord">
        insert into risk_hit_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cursor != null">
                "cursor",
            </if>
            <if test="dataEventType != null">
                data_event_type,
            </if>
            <if test="dataEventOpType != null">
                data_event_op_type,
            </if>
            <if test="stamp != null">
                stamp,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="method != null">
                method,
            </if>
            <if test="uri != null">
                uri,
            </if>
            <if test="realUri != null">
                real_uri,
            </if>
            <if test="requestBody != null">
                request_body,
            </if>
            <if test="requestExtra != null">
                request_extra,
            </if>
            <if test="responseStatus != null">
                response_status,
            </if>
            <if test="responseBody != null">
                response_body,
            </if>
            <if test="responseExtra != null">
                response_extra,
            </if>
            <if test="requestId != null">
                request_id,
            </if>
            <if test="metadata != null">
                metadata,
            </if>
            <if test="jwt != null">
                jwt,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="roleIds != null">
                role_ids,
            </if>
            <if test="credentialType != null">
                credential_type,
            </if>
            <if test="deviceType != null">
                device_type,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="clientIp != null">
                client_ip,
            </if>
            <if test="userAgent != null">
                user_agent,
            </if>
            <if test="secKey != null">
                sec_key,
            </if>
            <if test="requestUnDecryption != null">
                request_un_decryption,
            </if>
            <if test="responseUnEncryption != null">
                response_un_encryption,
            </if>
            <if test="existenceRequestBody != null">
                existence_request_body,
            </if>
            <if test="existenceResponseBody != null">
                existence_response_body,
            </if>
            <if test="durationSeconds != null">
                duration_seconds,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="module != null">
                "module",
            </if>
            <if test="relativeUri != null">
                relative_uri,
            </if>
            <if test="absoluteUri != null">
                absolute_uri,
            </if>
            <if test="relationView != null">
                relation_view,
            </if>
            <if test="authenticate != null">
                authenticate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="hitType != null">
                hit_type,
            </if>
            <if test="illegalExpiresSecond != null">
                illegal_expires_second,
            </if>
            <if test="removeSession != null">
                remove_session,
            </if>
            <if test="invalidStatus != null">
                invalid_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="cursor != null">
                #{cursor,jdbcType=BIGINT},
            </if>
            <if test="dataEventType != null">
                #{dataEventType,jdbcType=VARCHAR},
            </if>
            <if test="dataEventOpType != null">
                #{dataEventOpType,jdbcType=VARCHAR},
            </if>
            <if test="stamp != null">
                #{stamp,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                #{uri,jdbcType=VARCHAR},
            </if>
            <if test="realUri != null">
                #{realUri,jdbcType=VARCHAR},
            </if>
            <if test="requestBody != null">
                #{requestBody,jdbcType=VARCHAR},
            </if>
            <if test="requestExtra != null">
                #{requestExtra,jdbcType=VARCHAR},
            </if>
            <if test="responseStatus != null">
                #{responseStatus,jdbcType=INTEGER},
            </if>
            <if test="responseBody != null">
                #{responseBody,jdbcType=VARCHAR},
            </if>
            <if test="responseExtra != null">
                #{responseExtra,jdbcType=VARCHAR},
            </if>
            <if test="requestId != null">
                #{requestId,jdbcType=VARCHAR},
            </if>
            <if test="metadata != null">
                #{metadata,jdbcType=VARCHAR},
            </if>
            <if test="jwt != null">
                #{jwt,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="roleIds != null">
                #{roleIds,jdbcType=ARRAY,typeHandler=com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler},
            </if>
            <if test="credentialType != null">
                #{credentialType,jdbcType=VARCHAR},
            </if>
            <if test="deviceType != null">
                #{deviceType,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=BIGINT},
            </if>
            <if test="clientIp != null">
                #{clientIp,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null">
                #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="secKey != null">
                #{secKey,jdbcType=VARCHAR},
            </if>
            <if test="requestUnDecryption != null">
                #{requestUnDecryption,jdbcType=INTEGER},
            </if>
            <if test="responseUnEncryption != null">
                #{responseUnEncryption,jdbcType=INTEGER},
            </if>
            <if test="existenceRequestBody != null">
                #{existenceRequestBody,jdbcType=INTEGER},
            </if>
            <if test="existenceResponseBody != null">
                #{existenceResponseBody,jdbcType=INTEGER},
            </if>
            <if test="durationSeconds != null">
                #{durationSeconds,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="module != null">
                #{module,jdbcType=VARCHAR},
            </if>
            <if test="relativeUri != null">
                #{relativeUri,jdbcType=VARCHAR},
            </if>
            <if test="absoluteUri != null">
                #{absoluteUri,jdbcType=VARCHAR},
            </if>
            <if test="relationView != null">
                #{relationView,jdbcType=VARCHAR},
            </if>
            <if test="authenticate != null">
                #{authenticate,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="hitType != null">
                #{hitType,jdbcType=INTEGER},
            </if>
            <if test="illegalExpiresSecond != null">
                #{illegalExpiresSecond,jdbcType=BIGINT},
            </if>
            <if test="removeSession != null">
                #{removeSession,jdbcType=INTEGER},
            </if>
            <if test="invalidStatus != null">
                #{invalidStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.risk.repository.entity.RiskHitRecord">
        update risk_hit_record
        set "cursor"                = #{cursor,jdbcType=BIGINT},
            data_event_type         = #{dataEventType,jdbcType=VARCHAR},
            data_event_op_type      = #{dataEventOpType,jdbcType=VARCHAR},
            stamp                   = #{stamp,jdbcType=BIGINT},
            create_date             = #{createDate,jdbcType=VARCHAR},
            method                  = #{method,jdbcType=VARCHAR},
            uri                     = #{uri,jdbcType=VARCHAR},
            real_uri                = #{realUri,jdbcType=VARCHAR},
            request_body            = #{requestBody,jdbcType=VARCHAR},
            request_extra           = #{requestExtra,jdbcType=VARCHAR},
            response_status         = #{responseStatus,jdbcType=INTEGER},
            response_body           = #{responseBody,jdbcType=VARCHAR},
            response_extra          = #{responseExtra,jdbcType=VARCHAR},
            request_id              = #{requestId,jdbcType=VARCHAR},
            metadata                = #{metadata,jdbcType=VARCHAR},
            jwt                     = #{jwt,jdbcType=VARCHAR},
            member_id               = #{memberId,jdbcType=BIGINT},
            role_ids                = #{roleIds,jdbcType=ARRAY,typeHandler=com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler},
            credential_type         = #{credentialType,jdbcType=VARCHAR},
            device_type             = #{deviceType,jdbcType=VARCHAR},
            login_time              = #{loginTime,jdbcType=BIGINT},
            client_ip               = #{clientIp,jdbcType=VARCHAR},
            user_agent              = #{userAgent,jdbcType=VARCHAR},
            sec_key                 = #{secKey,jdbcType=VARCHAR},
            request_un_decryption   = #{requestUnDecryption,jdbcType=INTEGER},
            response_un_encryption  = #{responseUnEncryption,jdbcType=INTEGER},
            existence_request_body  = #{existenceRequestBody,jdbcType=INTEGER},
            existence_response_body = #{existenceResponseBody,jdbcType=INTEGER},
            duration_seconds        = #{durationSeconds,jdbcType=INTEGER},
            resource_id             = #{resourceId,jdbcType=BIGINT},
            "module"                = #{module,jdbcType=VARCHAR},
            relative_uri            = #{relativeUri,jdbcType=VARCHAR},
            absolute_uri            = #{absoluteUri,jdbcType=VARCHAR},
            relation_view           = #{relationView,jdbcType=VARCHAR},
            authenticate            = #{authenticate,jdbcType=INTEGER},
            hit_type                = #{hitType,jdbcType=INTEGER},
            illegal_expires_second  = #{illegalExpiresSecond,jdbcType=BIGINT},
            remove_session          = #{removeSession,jdbcType=INTEGER},
            invalid_status          = #{invalidStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.risk.repository.entity.RiskHitRecord">
        update risk_hit_record
        <set>
            <if test="cursor != null">
                "cursor" = #{cursor,jdbcType=BIGINT},
            </if>
            <if test="dataEventType != null">
                data_event_type = #{dataEventType,jdbcType=VARCHAR},
            </if>
            <if test="dataEventOpType != null">
                data_event_op_type = #{dataEventOpType,jdbcType=VARCHAR},
            </if>
            <if test="stamp != null">
                stamp = #{stamp,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                method = #{method,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                uri = #{uri,jdbcType=VARCHAR},
            </if>
            <if test="realUri != null">
                real_uri = #{realUri,jdbcType=VARCHAR},
            </if>
            <if test="requestBody != null">
                request_body = #{requestBody,jdbcType=VARCHAR},
            </if>
            <if test="requestExtra != null">
                request_extra = #{requestExtra,jdbcType=VARCHAR},
            </if>
            <if test="responseStatus != null">
                response_status = #{responseStatus,jdbcType=INTEGER},
            </if>
            <if test="responseBody != null">
                response_body = #{responseBody,jdbcType=VARCHAR},
            </if>
            <if test="responseExtra != null">
                response_extra = #{responseExtra,jdbcType=VARCHAR},
            </if>
            <if test="requestId != null">
                request_id = #{requestId,jdbcType=VARCHAR},
            </if>
            <if test="metadata != null">
                metadata = #{metadata,jdbcType=VARCHAR},
            </if>
            <if test="jwt != null">
                jwt = #{jwt,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                role_ids =
                #{roleIds,jdbcType=ARRAY,typeHandler=com.blue.risk.repository.type.ClickHouseLongArrayTypeHandler},
            </if>
            <if test="credentialType != null">
                credential_type = #{credentialType,jdbcType=VARCHAR},
            </if>
            <if test="deviceType != null">
                device_type = #{deviceType,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=BIGINT},
            </if>
            <if test="clientIp != null">
                client_ip = #{clientIp,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null">
                user_agent = #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="secKey != null">
                sec_key = #{secKey,jdbcType=VARCHAR},
            </if>
            <if test="requestUnDecryption != null">
                request_un_decryption = #{requestUnDecryption,jdbcType=INTEGER},
            </if>
            <if test="responseUnEncryption != null">
                response_un_encryption = #{responseUnEncryption,jdbcType=INTEGER},
            </if>
            <if test="existenceRequestBody != null">
                existence_request_body = #{existenceRequestBody,jdbcType=INTEGER},
            </if>
            <if test="existenceResponseBody != null">
                existence_response_body = #{existenceResponseBody,jdbcType=INTEGER},
            </if>
            <if test="durationSeconds != null">
                duration_seconds = #{durationSeconds,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="module != null">
                "module" = #{module,jdbcType=VARCHAR},
            </if>
            <if test="relativeUri != null">
                relative_uri = #{relativeUri,jdbcType=VARCHAR},
            </if>
            <if test="absoluteUri != null">
                absolute_uri = #{absoluteUri,jdbcType=VARCHAR},
            </if>
            <if test="relationView != null">
                relation_view = #{relationView,jdbcType=VARCHAR},
            </if>
            <if test="authenticate != null">
                authenticate = #{authenticate,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="hitType != null">
                hit_type = #{hitType,jdbcType=INTEGER},
            </if>
            <if test="illegalExpiresSecond != null">
                illegal_expires_second = #{illegalExpiresSecond,jdbcType=BIGINT},
            </if>
            <if test="removeSession != null">
                remove_session = #{removeSession,jdbcType=INTEGER},
            </if>
            <if test="invalidStatus != null">
                invalid_status = #{invalidStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from risk_hit_record
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from risk_hit_record
        where id = #{id,jdbcType=BIGINT}
    </select>

    <sql id="Column_Conditions">
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.dataEventType != null and riskHitRecordCondition.dataEventType != ''">
            AND
            data_event_type = #{riskHitRecordCondition.dataEventType,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.dataEventOpType != null and riskHitRecordCondition.dataEventOpType != ''">
            AND
            data_event_op_type = #{riskHitRecordCondition.dataEventOpType,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.stampBegin != null">
            AND
            stamp &gt;= #{riskHitRecordCondition.stampBegin,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.stampBegin != null">
            AND
            stamp &lt;= #{riskHitRecordCondition.stampBegin,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.method != null and riskHitRecordCondition.method != ''">
            AND
            method = #{riskHitRecordCondition.method,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.uri != null and riskHitRecordCondition.uri != ''">
            AND
            uri = #{riskHitRecordCondition.uri,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.realUri != null and riskHitRecordCondition.realUri != ''">
            AND
            real_uri = #{riskHitRecordCondition.realUri,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.responseStatus != null">
            AND
            response_status = #{riskHitRecordCondition.responseStatus,jdbcType=INTEGER}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.memberId != null">
            AND
            member_id = #{riskHitRecordCondition.memberId,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.roleId != null">
            AND
            has(role_ids,#{riskHitRecordCondition.roleId,jdbcType=BIGINT})
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.credentialType != null and riskHitRecordCondition.credentialType != ''">
            AND
            credential_type = #{riskHitRecordCondition.credentialType,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.deviceType != null and riskHitRecordCondition.deviceType != ''">
            AND
            device_type = #{riskHitRecordCondition.deviceType,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.loginTimeBegin != null">
            AND
            login_time &gt;= #{riskHitRecordCondition.loginTimeBegin,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.loginTimeEnd != null">
            AND
            login_time &lt;= #{riskHitRecordCondition.loginTimeEnd,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.clientIp != null and riskHitRecordCondition.clientIp != ''">
            AND
            client_ip = #{riskHitRecordCondition.clientIp,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.userAgent != null and riskHitRecordCondition.userAgent != ''">
            AND
            user_agent = #{riskHitRecordCondition.userAgent,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.durationSecondsMin != null">
            AND
            duration_seconds = #{riskHitRecordCondition.durationSecondsMin,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.durationSecondsMax != null">
            AND
            duration_seconds = #{riskHitRecordCondition.durationSecondsMax,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.resourceId != null">
            AND
            resource_id = #{riskHitRecordCondition.resourceId,jdbcType=BIGINT}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.module != null and riskHitRecordCondition.module != ''">
            AND
            "module" = #{riskHitRecordCondition.module,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.relativeUri != null and riskHitRecordCondition.relativeUri != ''">
            AND
            relative_uri = #{riskHitRecordCondition.relativeUri,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.absoluteUri != null and riskHitRecordCondition.absoluteUri != ''">
            AND
            absolute_uri = #{riskHitRecordCondition.absoluteUri,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.relationView != null and riskHitRecordCondition.relationView != ''">
            AND
            relation_view = #{riskHitRecordCondition.relationView,jdbcType=VARCHAR}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.authenticate != null">
            AND
            authenticate = #{riskHitRecordCondition.authenticate,jdbcType=INTEGER}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.type != null">
            AND
            type = #{riskHitRecordCondition.type,jdbcType=INTEGER}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.hitType != null">
            AND
            hit_type = #{riskHitRecordCondition.hitType,jdbcType=INTEGER}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.removeSession != null">
            AND
            remove_session = #{riskHitRecordCondition.removeSession,jdbcType=INTEGER}
        </if>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.invalidStatus != null">
            AND
            invalid_status = #{riskHitRecordCondition.invalidStatus,jdbcType=INTEGER}
        </if>
    </sql>

    <sql id="Risk_Hit_Record_Conditions">
        <where>
            <include refid="Column_Conditions"/>
            <if test="column != null and comparison != null and searchAfter != null and searchAfter > 0">
                AND
                "${column}" ${comparison} #{searchAfter,jdbcType=BIGINT}
            </if>
        </where>
    </sql>

    <select id="selectBySearchAfterAndCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        risk_hit_record
        <include refid="Risk_Hit_Record_Conditions"/>
        <if test="riskHitRecordCondition != null and riskHitRecordCondition.sortAttribute != null and riskHitRecordCondition.sortAttribute != '' and riskHitRecordCondition.sortType != null and riskHitRecordCondition.sortType != ''">
            ORDER BY
            ${riskHitRecordCondition.sortAttribute} ${riskHitRecordCondition.sortType}
        </if>
        LIMIT #{rows,jdbcType=BIGINT}
    </select>

    <sql id="Count_Conditions">
        <where>
            <include refid="Column_Conditions"/>
        </where>
    </sql>

    <select id="countByCondition" resultType="java.lang.Long">
        SELECT
        COUNT(id)
        FROM
        risk_hit_record
        <include refid="Count_Conditions"/>
    </select>

</mapper>