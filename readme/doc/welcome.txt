开发环境:

IDEA            2021.1
JDK             11.0.5 LTS
MAVEN           3.8.3
MYSQL           8.0.15
REDIS           3.2.100 64BIT (WINDOWS)
ZOOKEEPER       APACHE ZOOKEEPER 3.7.0
PULSAR          2.8.1


registry        注册中心              eureka
common          通用组件集成           java

file            文件服务网关           webflux
gateway         通用网关              cloud gateway
verify          验证码服务网关         webflux

base            基础服务              webflux
secure          安全服务              webflux
member          成员服务              webflux
finance         财务服务              webflux
portal          门户服务              webflux
marketing       营销服务              webflux
business        主业务服务            webflux        你可以代入自己的业务
data            数据服务              webflux
risk            风控服务              webflux
shine           公益服务              webflux





=======================================================================================================================================================================================





如何启动项目?

1.根据 readme/doc/components 中的提示文档,启动项目所需的组件. 如 mysql,redis,pulsar,zk,seata 等.
    你可以自行在官网下载对应的组件,或使用百度网盘下载:

    链接：https://pan.baidu.com/s/1J78tPku7LqQGLomery_Jpg
    提取码：xxcq
    --来自百度网盘


2.根据 readme/doc/init.sql 文件初始化一些相关的初始化数据.

3.首先启动注册中心服务 - registry , 然后启动其他的对应服务

4.readme/doc/summer.postman_collection.json 文件为 postman 测试导出





=======================================================================================================================================================================================





member 服务用于处理成员相关业务

secure 服务用于认证,鉴权相关的业务,其中维护了成员所对应的角色,资源权限等相关的数据

finance 服务用于账号的财务相关业务,后续闲暇时将会做出一些尝试,例如对接支付等

marketing 服务用于营销和推广业务,如 签到,活动 等, 当前只是尝试性地完成了一个月签到功能,等后续想到其他好玩儿的业务的时候会尝试

portal 服务用于门户访问业务, 如 热门推荐,公告 等

risk 服务用于风控业务,初期规划是根据网关层实时上报的数据进行分析,并通过 mq 消息通知网关层对相应的 jwt,ip 等进行拦截访问, 或通过 mq 消息通知 secure服务 失效相关用户的 jwt信息, 登录访问权限等

data 服务用于数据分析业务

base 服务用于集成一些 公共服务,第三方服务 等

shine 服务用于公益相关的业务

file 服务是用来独立处理文件业务的服务, 可将其看作文件相关的业务网关层

registry 服务用来作为服务的注册中心


common 作为项目通用组件统一维护

business 服务作为具体的业务服务, 你可以写你喜欢的内容

gateway 服务作为非文件请求的网关服务, 用于处理 认证鉴权,风控,数据上报,服务级熔断,限流,非法请求拦截,xss过滤,请求及响应数据加解密 等





=======================================================================================================================================================================================





有关加密接口的参数生成 请参考 common-base 中 test 下的 EncryptTest


有关分布式事务的测试,请参考member注册服务及涉及rpc服务中注释掉的测试代码自行测试


关于数据分片:
    在当前项目yml配置中,找到 identity 相关的配置,
    配置好数据中心及机器,在项目中 数据中心会对应到一台固定写入的数据库, 机器会写入到对应的表
    identity中的配置其实就是主键的雪花生成配置, sharding会根据对应id的属性来决定将数据写入到哪个库的哪张表


    数据横向扩展稍稍麻烦:
    0. 首先, 需要创建出新的库, 库名规范按照 逻辑库名_0 (就是逻辑库名加_加递增编号), 如果同时需要增加表的话, 需要将旧的数据库以及新库同时增加
    1. 对于正在运行的节点机器, 如果你不需要该机器切换写入数据库(就是说你希望这台机器的数据还写在原来的库中, 那么增加sharding及表后,灰度重启即可)
    2. 上面的步骤完成后, 对于需要切换写入数据库的机器, 增加sharding及表后, 同时修改雪花配置, 然后灰度重启后, 数据将写入新的库表

    之所以需要1中的操作, 是因为如果某些服务机器写入新库的话, 而另外某些机器在不更改sharding配置的话, 是读不到新库的信息的, 这样如果有数据写入新的库表后, 查询请求打到那些未配置sharding的机器, 就会导致定位到未配置的库表


    你需要在数据量达瓶颈前, 配置好新的库表 , 然后灰度将 identity中的写入配置替换为新的库表, 完成全部服务的更新后, 新的数据将会写入到新的库表, 旧的数据无需迁移


项目只作为研究使用


如果你有关于项目的 代码逻辑,配置,技术栈 等相关问题的疑问, 可发送邮件至      liuyunfei0221@outlook.com     或在非工作时间内联系 13131693996   ,我会在工作之外的闲暇时间尽可能地回复




=======================================================================================================================================================================================




请求进入网关后,将经过网关层的 熔断过滤,限流过滤,请求参数及大小过滤,认证鉴权过滤,加解密处理,数据上报过滤等 流程后,
下发到具体的服务中.

请求及响应的数据会上报到 风控 及 数据分析服务,如果被 风控服务定位为非法,
风控服务可以基于 mq 告知网关层进行拦截.

secure 服务在登录后会签发 jwt ,项目中使用jwt作为访问凭证,
同时发放的还有对应的 privateKey 私钥, 用于加密接口的 数据加密 及 签名.
secure 服务中可以管理所有的 资源属性, 及 资源 与对应角色 角色与对应成员的关系.
你可以为不同的角色定制化资源的访问, 但请不要为成员赋予多个角色.
secure 服务中对于权限的校验 是由 本地缓存 完成的,如果你变更了相关的访问权限, 请刷新缓存,我会在后续完善这些功能点.以及提供粒度更精细的权限刷新功能.
secure 服务中,使用 redis 存储 认证后的 jwt 信息, 并会在存在一点点过期时间误差的情况下刷新 jwt 的 过期时间.
