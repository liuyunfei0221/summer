server:
  address: 127.0.0.1
  port: 35000
  netty:
    connection-timeout: 6s
    h2c-max-content-length: 0B
    initial-buffer-size: 128B
    max-chunk-size: 8KB
    max-initial-line-length: 4KB
    validate-headers: true
  http2:
    enabled: true
  error:
    path: /error
#  ssl:
#    client-auth: need
#    ciphers: [ ]
#    enabled-protocols: [ ]
#    key-alias:
#    key-password:
#    key-store:
#    key-store-password:
#    key-store-type:
#    key-store-provider:
#    trust-store:
#    trust-store-password:
#    trust-store-type:
#    trust-store-provider:
#    protocol: TLS


eureka:
  instance:
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 60
    instance-id: ${server.address}:${spring.application.name}:${server.port}
    hostname: ${server.address}
  client:
    service-url:
      defaultZone: http://blue:LiuZhiyi20200805@172.16.207.11:3000/eureka/
    registry-fetch-interval-seconds: 60


data:
  sharding-databases:
    - url: jdbc:mysql://172.16.207.11:3306/marketing_0
      database-conf: useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: root
      password: 1024
      driver-class-name: com.mysql.cj.jdbc.Driver
      connection-timeout: 120000
      max-lifetime: 1800000
      max-pool-size: 4
      min-idle: 2
      idle-timeout: 5
      connection-test-query: SELECT 1 FROM DUAL
      is-read-only: false
      is-auto-commit: false

    - url: jdbc:mysql://172.16.207.11:3306/marketing_1
      database-conf: useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: root
      password: 1024
      driver-class-name: com.mysql.cj.jdbc.Driver
      connection-timeout: 120000
      max-lifetime: 1800000
      max-pool-size: 4
      min-idle: 2
      idle-timeout: 5
      connection-test-query: SELECT 1 FROM DUAL
      is-read-only: false
      is-auto-commit: false
  sharding-tables:
    - table-name: event_record
      sharding-column: id

  sharding-table-size-per-database: 2
  data-center-to-database-mappings:
    - id: 0
      index: 0

    - id: 1
      index: 1
  worker-to-table-mappings:
    - id: 0
      index: 0

    - id: 1
      index: 1
  broadcast-tables: [ ]
  single-databases-with-tables:
    - url: jdbc:mysql://172.16.207.11:3306/marketing
      database-conf: useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: root
      password: 1024
      driver-class-name: com.mysql.cj.jdbc.Driver
      connection-timeout: 120000
      max-lifetime: 1800000
      max-pool-size: 4
      min-idle: 2
      idle-timeout: 5
      connection-test-query: SELECT 1 FROM DUAL
      is-read-only: false
      is-auto-commit: false
      singleTables: [ reward,reward_date_relation,undo_log ]
  safe-row-bounds-enabled: false
  safe-result-handler-enabled: false
  map-underscore-to-camel-case: true
  aggressive-lazy-loading: false
  multiple-result-sets-enabled: false
  use-generated-keys: false
  use-column-label: true
  cache-enabled: false
  call-setters-on-nulls: false
  use-actual-param-name: false
  return-instance-for-empty-row: false
  shrink-whitespaces-in-sql: false
  nullable-on-for-each: false
  local-cache-scope: SESSION
  jdbc-type-for-null:
  default-statement-timeout: 30000
  default-fetch-size: 100
  default-result-set-type: DEFAULT
  default-executor-type: BATCH
  auto-mapping-behavior: FULL
  auto-mapping-unknown-column-behavior: FAILING
  lazy-loading-enabled: false
  mapper-location: classpath:mapper/*.xml
  props:
    sql.show: true
    sql.simple: false
    executor.size: 128
    max.connections.size.per.query: 2
    check.table.metadata.enabled: true
    query.with.cipher.column: false
    xa.transaction.manager.type: Atomikos
  debug-logging: true


identity:
  data-center: 0
  worker: 0
  service-name: blue-marketing
  boot-seconds: 1618790400
  buffer-power: 3
  padding-factor: 50
  padding-core-pool-size: 1
  padding-maximum-pool-size: 2
  keep-alive-seconds: 128
  padding-blocking-queue-size: 1024
  padding-scheduled: true
  padding-scheduled-core-pool-size: 2
  padding-scheduled-initial-delay-millis: 5000
  padding-scheduled-delay-millis: 15000


mongo:
  address-attrs:
    - address: 172.16.207.11
      port: 27017
  auth: false
  auth-base:
  user-name:
  password:
  database: marketing
  retry-reads: false
  retry-writes: false
  application-name: blue-marketing
  uuid-representation: JAVA_LEGACY
  socket-connect-timeout-millis: 60000
  socket-read-timeout-millis: 60000
  socket-receive-buffer-size: 10000
  socket-send-buffer-size: 256
  cluster-connection-mode: SINGLE
  cluster-type: STANDALONE
  cluster-local-threshold-millis: 60000
  server-selection-timeout-millis: 60000
  pool-max-size: 12
  pool-min-size: 2
  pool-max-wait-time-millis: 60000
  pool-max-connection-lifeTime-millis: 60000
  pool-max-connection-idle-time-millis: 60000
  pool-maintenance-initial-delay-millis: 60000
  pool-maintenance-frequency-millis: 60000


cache:
  server-mode: SINGLE
  nodes: [ 172.20.20.2:6379,172.20.20.2:6380,172.20.20.3:6379,172.20.20.3:6380,172.20.20.4:6379,172.20.20.4:6380 ]
  host: 172.16.207.11
  port: 6379
  password:
  max-redirects: 4
  min-idle: 4
  max-idle: 64
  max-total: 128
  max-wait-millis: 16
  auto-reconnect: true
  buffer-usage-ratio: 32.0
  cancel-commands-on-reconnect-failure: false
  ping-before-activate-connection: false
  request-queue-size: 64
  publish-on-scheduler: true
  tcp-no-delay: true
  connect-timeout: 10
  keep-alive: false
  suspend-reconnect-on-protocol-failure: false
  fixed-timeout: 4
  command-timeout: 4
  shutdown-timeout: 8
  shutdown-quiet-period: 4
  entry-ttl: 60


executor:
  core-pool-size: 4
  maximum-pool-size: 8
  keep-alive-seconds: 64
  blocking-queue-capacity: 128
  thread-name-pre: blue-summer


message:
  message-location: classpath:i18n/message
  element-location: classpath:i18n/element


scheduler:
  threadCap: 4
  queuedTaskCap: 4096
  thread-name-pre: blue-summer-scheduler
  ttlSeconds: 128


redisson:
  server-mode: SINGLE
  nodes: [ 172.20.20.2:6379,172.20.20.2:6380,172.20.20.3:6379,172.20.20.3:6380,172.20.20.4:6379,172.20.20.4:6380 ]
  address: 172.16.207.11:6379
  password:
  scanInterval: 8000
  checkSlotsCoverage: false
  tcp-no-delay: true
  masterConnectionMinimumIdleSize: 2
  slaveConnectionMinimumIdleSize: 2
  masterConnectionPoolSize: 2
  slaveConnectionPoolSize: 2
  subscriptionConnectionMinimumIdleSize: 2
  subscriptionConnectionPoolSize: 2
  subscriptionsPerConnection: 2
  subscriptionMode: MASTER
  timeout: 60000
  connect-timeout: 60000
  idleConnectionTimeout: 32000
  retryAttempts: 2
  retryInterval: 4000
  keep-alive: true
  dnsMonitoringInterval: -1
  pingConnectionInterval: 300000
  executorCorePoolSize: 4
  executorMaximumPoolSize: 8
  executorKeepAliveSeconds: 64
  executorBlockingQueueCapacity: 128
  maxTryLockWaitingMillis: 10000


rewards:
  maxBlockingMillis: 5000
  maxBackup: 36


pulsar:
  services: [ 172.16.207.11:6650 ]
  enableTls: false
  tlsTrustCertsFilePath:
  tlsCertFilePath:
  tlsKeyFilePath:
  tlsAllowInsecureConnection:
  tlsHostnameVerificationEnable:
  listenerName:
  operationTimeoutMillis: 30000
  statsIntervalMillis: 60000
  ioThreads: 1
  listenerThreads: 1
  connectionsPerBroker: 1
  useTcpNoDelay: true
  memoryLimitKiloBytes: 512
  maxConcurrentLookupRequests: 60
  maxLookupRequest: 50000
  maxLookupRedirects: 3
  maxNumberOfRejectedRequestPerConnection: 50
  keepAliveIntervalMillis: 30000
  connectionTimeoutMillis: 60000
  startingBackoffIntervalMillis: 300
  maxBackoffIntervalMillis: 600
  enableBusyWait: false
  clockZoneId: Asia/Shanghai
  enableTransaction: false
  enableProxy: false
  proxyServiceUrl:
  proxyProtocol: SNI


producers:
  configs:
    refreshRewards:
      topic: refreshRewards
      producerName: refreshRewardsProducer000
      accessMode: Shared
      sendTimeoutMillis: 30000
      maxPendingMessages: 1000
      blockIfQueueFull: false
      messageRoutingMode: RoundRobinPartition
      compressionType: NONE
      enableBatching: true
      enableChunking: false
      batchingMaxPublishDelayMillis: 1000
      roundRobinRouterBatchingPartitionSwitchFrequency: 2
      batchingMaxMessages: 512
      batchingMaxBytes: 512
      initialSequenceId: 0
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      enableMultiSchema: false
      hashingSchemes: [ JavaStringHash ]
      enableEncrypt: false
      encryptionKey:
      producerCryptoFailureAction: FAIL
    marketing:
      topic: marketing
      producerName: marketingProducer000
      accessMode: Shared
      sendTimeoutMillis: 30000
      maxPendingMessages: 1000
      blockIfQueueFull: false
      messageRoutingMode: RoundRobinPartition
      compressionType: NONE
      enableBatching: true
      enableChunking: false
      batchingMaxPublishDelayMillis: 1000
      roundRobinRouterBatchingPartitionSwitchFrequency: 2
      batchingMaxMessages: 512
      batchingMaxBytes: 512
      initialSequenceId: 0
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      enableMultiSchema: false
      hashingSchemes: [ JavaStringHash ]
      enableEncrypt: false
      encryptionKey:
      producerCryptoFailureAction: FAIL


consumers:
  configs:
    refreshRewards:
      topics: [ refreshRewards ]
      topicsPattern:
      subscriptionName: refreshRewardsSubscription
      ackTimeoutMillis: 2000
      enableAckReceipt: true
      ackTimeoutTickTimeMillis: 1000
      negativeAckRedeliveryDelayMillis: 100
      subscriptionType: Shared
      subscriptionMode: Durable
      receiverQueueSize: 1000
      acknowledgementsGroupTimeMillis: 100
      replicateSubscriptionState: false
      maxTotalReceiverQueueSizeAcrossPartitions: 5
      consumerName: refreshRewardsConsumer000
      readCompacted: false
      patternAutoDiscoveryPeriodMillis: 1
      priorityLevel: 0
      subscriptionInitialPosition: Latest
      regexSubscriptionMode: PersistentOnly
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      batchReceivePolicy: DEFAULT_POLICY
      enableRetry: true
      enableBatchIndexAcknowledgment: false
      maxPendingChunkedMessage: 10
      autoAckOldestChunkedMessageOnQueueFull: true
      expireTimeOfIncompleteChunkedMessageMillis: 2000
      poolMessages: false
      enableEncrypt: false
      encryptionKey:
      consumerCryptoFailureAction: FAIL
      enableDeadLetter: true
      deadLetterTopic: refreshRewards
      retryLetterTopic: refreshRewards
      maxRedeliverCount: 1000
      startMessageIdInclusive: false
      enableBatchReceive: false
      batchReceiveMaxNumMessages: -1
      batchReceiveMaxNumBytes: 10485760
      batchReceiveTimeoutMillis: 100
      pollDurationMills: 1000
      workingThreads: 2
      enableNegativeAcknowledge: true
    marketing:
      topics: [ marketing ]
      topicsPattern:
      subscriptionName: marketingSubscription
      ackTimeoutMillis: 2000
      enableAckReceipt: true
      ackTimeoutTickTimeMillis: 1000
      negativeAckRedeliveryDelayMillis: 100
      subscriptionType: Failover
      subscriptionMode: Durable
      receiverQueueSize: 1000
      acknowledgementsGroupTimeMillis: 100
      replicateSubscriptionState: false
      maxTotalReceiverQueueSizeAcrossPartitions: 5
      consumerName: marketingConsumer000
      readCompacted: false
      patternAutoDiscoveryPeriodMillis: 1
      priorityLevel: 0
      subscriptionInitialPosition: Latest
      regexSubscriptionMode: PersistentOnly
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      batchReceivePolicy: DEFAULT_POLICY
      enableRetry: true
      enableBatchIndexAcknowledgment: false
      maxPendingChunkedMessage: 10
      autoAckOldestChunkedMessageOnQueueFull: true
      expireTimeOfIncompleteChunkedMessageMillis: 2000
      poolMessages: false
      enableEncrypt: false
      encryptionKey:
      consumerCryptoFailureAction: FAIL
      enableDeadLetter: true
      deadLetterTopic: marketing
      retryLetterTopic: marketing
      maxRedeliverCount: 1000
      startMessageIdInclusive: false
      enableBatchReceive: false
      batchReceiveMaxNumMessages: -1
      batchReceiveMaxNumBytes: 10485760
      batchReceiveTimeoutMillis: 100
      pollDurationMills: 1000
      workingThreads: 2
      enableNegativeAcknowledge: true
    requestEvent:
      topics: [ requestEvent ]
      topicsPattern:
      subscriptionName: marketingRequestEventSubscription
      ackTimeoutMillis: 2000
      enableAckReceipt: true
      ackTimeoutTickTimeMillis: 1000
      negativeAckRedeliveryDelayMillis: 100
      subscriptionType: Failover
      subscriptionMode: Durable
      receiverQueueSize: 1000
      acknowledgementsGroupTimeMillis: 100
      replicateSubscriptionState: false
      maxTotalReceiverQueueSizeAcrossPartitions: 5
      consumerName: marketingRequestEventSubscription
      readCompacted: false
      patternAutoDiscoveryPeriodMillis: 1
      priorityLevel: 0
      subscriptionInitialPosition: Latest
      regexSubscriptionMode: PersistentOnly
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      batchReceivePolicy: DEFAULT_POLICY
      enableRetry: true
      enableBatchIndexAcknowledgment: false
      maxPendingChunkedMessage: 10
      autoAckOldestChunkedMessageOnQueueFull: true
      expireTimeOfIncompleteChunkedMessageMillis: 2000
      poolMessages: false
      enableEncrypt: false
      encryptionKey:
      consumerCryptoFailureAction: FAIL
      enableDeadLetter: true
      deadLetterTopic: requestEvent
      retryLetterTopic: requestEvent
      maxRedeliverCount: 1000
      startMessageIdInclusive: false
      enableBatchReceive: false
      batchReceiveMaxNumMessages: -1
      batchReceiveMaxNumBytes: 10485760
      batchReceiveTimeoutMillis: 100
      pollDurationMills: 1000
      workingThreads: 2
      enableNegativeAcknowledge: true


dubbo:
  registry:
    id: summer-registry
    client: curator
    protocol: zookeeper
    address: zookeeper://172.16.207.11
    port: 2181
    username:
    password:
    file: /usr/env/log/dubbo/marketing/registry.properties
    check: false
    timeout: 60000
    simplified: false
#  metadata-report:
#    address: zookeeper://172.16.207.11
#    port: 2181
#    username:
#    password:
#    timeout:
#    default: true
#    check: false
#    sync-report: false
#    report-metadata: false
  application:
    id: summer-marketing
    name: summer-marketing
    owner: blue
    organization: blue
    shutwait: 20s
    enable-file-cache: true
  protocol:
    name: dubbo
    host: localhost
    port: 36000
    accesslog: /usr/env/log/dubbo/marketing/access.log
  provider:
    retries: 0
    timeout: 10000
    loadbalance: random
  consumer:
    retries: 0
    timeout: 10000
    loadbalance: random
    check: false


debug: true