<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.portal.repository.mapper.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.blue.portal.repository.entity.Notice">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
        <result column="updater" jdbcType="BIGINT" property="updater"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , title, content, link, type, create_time, update_time, creator, updater
    </sql>

    <insert id="insert" parameterType="com.blue.portal.repository.entity.Notice">
        insert into notice (id, title, content, link, type, create_time, update_time, creator, updater)
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},
                #{link,jdbcType=VARCHAR},
                #{type,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
                #{creator,jdbcType=BIGINT}, #{updater,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.portal.repository.entity.Notice">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="link != null">
                link,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="updater != null">
                updater,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=BIGINT},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.portal.repository.entity.Notice">
        update notice
        set title       = #{title,jdbcType=VARCHAR},
            link        = #{link,jdbcType=VARCHAR},
            type        = #{type,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=BIGINT},
            creator     = #{creator,jdbcType=BIGINT},
            updater     = #{updater,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.portal.repository.entity.Notice">
        update notice
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=BIGINT},
            </if>
            <if test="updater != null">
                updater = #{updater,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from notice
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from notice
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        notice FORCE INDEX(idx_type)
        WHERE
        type = #{type,jdbcType=TINYINT}
        LIMIT 1;
    </select>

    <sql id="Notice_Conditions">
        <if test="noticeCondition != null">
            <where>
                <if test="noticeCondition.id != null">
                    AND
                    id = #{noticeCondition.id,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.titleLike != null and noticeCondition.titleLike != ''">
                    AND
                    title LIKE #{noticeCondition.titleLike,jdbcType=VARCHAR}
                </if>
                <if test="noticeCondition.linkLike != null and noticeCondition.linkLike != ''">
                    AND
                    link LIKE #{noticeCondition.linkLike,jdbcType=VARCHAR}
                </if>
                <if test="noticeCondition.type != null">
                    AND
                    type = #{noticeCondition.type,jdbcType=TINYINT}
                </if>
                <if test="noticeCondition.createTimeBegin != null">
                    AND
                    create_time &gt;= #{noticeCondition.createTimeBegin,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.createTimeEnd != null">
                    AND
                    create_time &lt;= #{noticeCondition.createTimeEnd,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.updateTimeBegin != null">
                    AND
                    update_time &gt;= #{noticeCondition.updateTimeBegin,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.updateTimeEnd != null">
                    AND
                    update_time &lt;= #{noticeCondition.updateTimeEnd,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.creator != null">
                    AND
                    creator = #{noticeCondition.creator,jdbcType=BIGINT}
                </if>
                <if test="noticeCondition.updater != null">
                    AND
                    updater = #{noticeCondition.updater,jdbcType=BIGINT}
                </if>
            </where>
        </if>
    </sql>

    <select id="selectByLimitAndCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        notice
        <include refid="Notice_Conditions"/>
        <if test="noticeCondition != null and noticeCondition.sortAttribute != null and noticeCondition.sortAttribute != '' and noticeCondition.sortType != null and noticeCondition.sortType != ''">
            ORDER BY
            ${noticeCondition.sortAttribute} ${noticeCondition.sortType}
        </if>
        LIMIT #{limit,jdbcType=BIGINT},#{rows,jdbcType=BIGINT}
    </select>

    <select id="countByCondition" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM
        notice
        <include refid="Notice_Conditions"/>
    </select>

</mapper>