<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.marketing.repository.mapper.EventRecordMapper">
    <resultMap id="BaseResultMap" type="com.blue.marketing.repository.entity.EventRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="data" jdbcType="VARCHAR" property="data"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , type, data, status, create_time, creator
    </sql>

    <insert id="insert" parameterType="com.blue.marketing.repository.entity.EventRecord">
        insert into event_record (id, type, data,
                                  status, create_time, creator)
        values (#{id,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{data,jdbcType=VARCHAR},
                #{status,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.marketing.repository.entity.EventRecord">
        insert into event_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="data != null">
                data,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="data != null">
                #{data,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.marketing.repository.entity.EventRecord">
        update event_record
        set type        = #{type,jdbcType=TINYINT},
            data        = #{data,jdbcType=VARCHAR},
            status      = #{status,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=BIGINT},
            creator     = #{creator,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.marketing.repository.entity.EventRecord">
        update event_record
        <set>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="data != null">
                data = #{data,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from event_record
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from event_record
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        <if test="list != null and list.size > 0">
            INSERT INTO event_record (
            <include refid="Base_Column_List"/>
            ) values
            <foreach collection="list" index="index" item="item" separator=",">
                (
                #{item.id,jdbcType=BIGINT},
                #{item.type,jdbcType=TINYINT},
                #{item.data,jdbcType=VARCHAR},
                #{item.status,jdbcType=TINYINT},
                #{item.createTime,jdbcType=BIGINT},
                #{item.creator,jdbcType=BIGINT}
                )
            </foreach>
        </if>
    </insert>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        event_record
        WHERE
        id IN
        <foreach collection="ids" open="(" close=")" separator="," item="id" index="index">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

    <sql id="EventRecord_Conditions">
        <if test="eventRecordCondition != null">
            <where>
                <if test="eventRecordCondition.id != null">
                    AND
                    id = #{eventRecordCondition.id,jdbcType=BIGINT}
                </if>
                <if test="eventRecordCondition.type != null">
                    AND
                    type = #{eventRecordCondition.type,jdbcType=TINYINT}
                </if>
                <if test="eventRecordCondition.status != null">
                    AND
                    status = #{eventRecordCondition.status,jdbcType=TINYINT}
                </if>
                <if test="eventRecordCondition.creator != null">
                    AND
                    creator = #{eventRecordCondition.creator,jdbcType=BIGINT}
                </if>
                <if test="eventRecordCondition.createTimeBegin != null">
                    AND
                    create_time &gt;= #{attachmentCondition.createTimeBegin,jdbcType=BIGINT}
                </if>
                <if test="eventRecordCondition.createTimeEnd != null">
                    AND
                    create_time &lt;= #{attachmentCondition.createTimeEnd,jdbcType=BIGINT}
                </if>
            </where>
        </if>
    </sql>

    <select id="selectByLimitAndCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        event_record
        <include refid="EventRecord_Conditions"/>
        <if test="eventRecordCondition != null and eventRecordCondition.sortAttribute != null and eventRecordCondition.sortAttribute != '' and eventRecordCondition.sortType != null and eventRecordCondition.sortType != ''">
            ORDER BY
            ${eventRecordCondition.sortAttribute} ${eventRecordCondition.sortType}
        </if>
        LIMIT #{limit,jdbcType=BIGINT},#{rows,jdbcType=BIGINT}
    </select>

    <select id="countByCondition" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM
        event_record
        <include refid="EventRecord_Conditions"/>
    </select>

    <select id="selectByLimitAndCreator" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        event_record FORCE INDEX(idx_creator_type_create_time)
        WHERE
        creator = #{creator,jdbcType=BIGINT}
        ORDER BY id DESC
        LIMIT #{limit,jdbcType=BIGINT}, #{rows,jdbcType=BIGINT}
    </select>

    <select id="countByCreator" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM event_record FORCE INDEX(idx_creator_type_create_time)
        WHERE creator = #{creator,jdbcType=BIGINT}
    </select>

</mapper>