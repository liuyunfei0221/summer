server:
  address: 127.0.0.1
  port: 15000
  netty:
    connection-timeout: 16s
    h2c-max-content-length: 0B
    initial-buffer-size: 128B
    max-chunk-size: 8KB
    max-initial-line-length: 4KB
    validate-headers: true
  http2:
    enabled: true
  error:
    path: /error
#  ssl:
#    client-auth: need
#    ciphers: [ ]
#    enabled-protocols: [ ]
#    key-alias:
#    key-password:
#    key-store:
#    key-store-password:
#    key-store-type:
#    key-store-provider:
#    trust-store:
#    trust-store-password:
#    trust-store-type:
#    trust-store-provider:
#    protocol: TLS


eureka:
  instance:
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 60
    instance-id: ${server.address}:${spring.application.name}:${server.port}
    hostname: ${server.address}
  client:
    service-url:
      defaultZone: http://blue:LiuZhiyi20200805@101.43.192.155:3000/eureka/
    registry-fetch-interval-seconds: 60


cors:
  allowedOrigins: [ "*" ]
  allowedMethods: [ "*" ]
  allowedHeaders: [ "*" ]
  exposedHeaders: [ ]
  allowCredentials: true
  maxAgeSeconds: 1728000
  allowedOriginPatterns: [ /** ]


web:
  maxInMemorySize: 4096


identity:
  data-center: 0
  worker: 0
  service-name: blue-verify
  boot-seconds: 1618790400
  buffer-power: 3
  padding-factor: 50
  padding-core-pool-size: 1
  padding-maximum-pool-size: 2
  keep-alive-seconds: 128
  padding-blocking-queue-size: 1024
  padding-scheduled: true
  padding-scheduled-core-pool-size: 2
  padding-scheduled-initial-delay-millis: 5000
  padding-scheduled-delay-millis: 15000


mongo:
  address-attrs:
    - address: 101.43.192.155
      port: 27017
  auth: true
  auth-base: admin
  user-name: blue
  password: LiuZhiyi20200805
  database: verify
  retry-reads: false
  retry-writes: false
  application-name: blue-media
  uuid-representation: JAVA_LEGACY
  socket-connect-timeout-millis: 60000
  socket-read-timeout-millis: 60000
  socket-receive-buffer-size: 10000
  socket-send-buffer-size: 256
  cluster-connection-mode: SINGLE
  cluster-type: STANDALONE
  cluster-local-threshold-millis: 60000
  server-selection-timeout-millis: 60000
  pool-max-size: 12
  pool-min-size: 2
  pool-max-wait-time-millis: 60000
  pool-max-connection-lifeTime-millis: 60000
  pool-max-connection-idle-time-millis: 60000
  pool-maintenance-initial-delay-millis: 60000
  pool-maintenance-frequency-millis: 60000


executor:
  core-pool-size: 2
  maximum-pool-size: 8
  keep-alive-seconds: 64
  blocking-queue-capacity: 2048
  thread-name-pre: blue-summer


message:
  message-location: classpath:i18n/message
  element-location: classpath:i18n/element


scheduler:
  threadCap: 4
  queuedTaskCap: 4096
  thread-name-pre: blue-summer-scheduler
  ttlSeconds: 128


cache:
  server-mode: SINGLE
  nodes: [ 172.18.7.1:6379,172.18.7.1:6380,172.18.7.2:6379,172.18.7.2:6380,172.18.7.3:6379,172.18.7.3:6380 ]
  host: 101.43.192.155
  port: 6379
  password: LiuZhiyi20200805
  max-redirects: 4
  min-idle: 4
  max-idle: 64
  max-total: 128
  max-wait-millis: 16
  auto-reconnect: true
  buffer-usage-ratio: 32.0
  cancel-commands-on-reconnect-failure: false
  ping-before-activate-connection: false
  request-queue-size: 64
  publish-on-scheduler: true
  tcp-no-delay: true
  connect-timeout: 10
  keep-alive: false
  suspend-reconnect-on-protocol-failure: false
  fixed-timeout: 4
  command-timeout: 4
  shutdown-timeout: 8
  shutdown-quiet-period: 4
  entry-ttl: 60


redisson:
  server-mode: SINGLE
  nodes: [ 172.20.20.2:6379,172.20.20.2:6380,172.20.20.3:6379,172.20.20.3:6380,172.20.20.4:6379,172.20.20.4:6380 ]
  address: 101.43.192.155:6379
  password: LiuZhiyi20200805
  scanInterval: 8000
  checkSlotsCoverage: false
  tcp-no-delay: true
  masterConnectionMinimumIdleSize: 2
  slaveConnectionMinimumIdleSize: 2
  masterConnectionPoolSize: 2
  slaveConnectionPoolSize: 2
  subscriptionConnectionMinimumIdleSize: 2
  subscriptionConnectionPoolSize: 2
  subscriptionsPerConnection: 2
  subscriptionMode: MASTER
  timeout: 60000
  connect-timeout: 60000
  idleConnectionTimeout: 32000
  retryAttempts: 2
  retryInterval: 4000
  keep-alive: true
  dnsMonitoringInterval: -1
  pingConnectionInterval: 300000
  executorCorePoolSize: 4
  executorMaximumPoolSize: 8
  executorKeepAliveSeconds: 64
  executorBlockingQueueCapacity: 128
  maxTryLockWaitingMillis: 10000


limit:
  replenishRate: 1
  burstCapacity: 3


risk:
  illegalExpiresSecond: 10


request:
  validContentTypes: [ application/json ]
  maxUriLength: 256
  maxHeaderCount: 16
  maxHeaderLength: 2048
  maxContentLength: 2048


dubbo:
  registry:
    id: summer-registry
    client: curator
    protocol: zookeeper
    address: zookeeper://43.138.44.171
    port: 2181
    username: blue
    password: LiuZhiyi20200805
    file: /usr/env/log/dubbo/verify/registry.properties
    check: false
    timeout: 60000
    simplified: false
  #  metadata-report:
  #    address: zookeeper://43.138.44.171
  #    port: 2181
  #    username: blue
  #    password: LiuZhiyi20200805
  #    timeout: 120000
  #    default: true
  #    check: false
  application:
    id: summer-verify
    name: summer-verify
    owner: blue
    organization: blue
    shutwait: 20s
    enable-file-cache: true
  protocol:
    name: dubbo
    host: localhost
    port: 16000
    accesslog: /usr/env/log/dubbo/verify/access.log
  provider:
    retries: 0
    timeout: 10000
    loadbalance: random
  consumer:
    retries: 0
    timeout: 10000
    loadbalance: random
    check: false


producers:
  configs:
    requestEvent:
      services: [ 43.138.111.53:6650 ]
      enableTls: false
      tlsTrustCertsFilePath:
      tlsCertFilePath:
      tlsKeyFilePath:
      tlsAllowInsecureConnection:
      tlsHostnameVerificationEnable:
      listenerName:
      operationTimeoutMillis: 30000
      statsIntervalMillis: 60000
      ioThreads: 1
      listenerThreads: 1
      connectionsPerBroker: 1
      useTcpNoDelay: true
      memoryLimitKiloBytes: 512
      maxConcurrentLookupRequests: 60
      maxLookupRequest: 50000
      maxLookupRedirects: 3
      maxNumberOfRejectedRequestPerConnection: 50
      keepAliveIntervalMillis: 30000
      connectionTimeoutMillis: 60000
      startingBackoffIntervalMillis: 300
      maxBackoffIntervalMillis: 600
      enableBusyWait: false
      clockZoneId: Asia/Shanghai
      enableTransaction: false
      enableProxy: false
      proxyServiceUrl:
      proxyProtocol: SNI
      topic: requestEvent
      producerName: verifyRequestEventProducer000
      accessMode: Shared
      sendTimeoutMillis: 30000
      maxPendingMessages: 1000
      blockIfQueueFull: false
      messageRoutingMode: RoundRobinPartition
      compressionType: NONE
      enableBatching: true
      enableChunking: false
      batchingMaxPublishDelayMillis: 1000
      roundRobinRouterBatchingPartitionSwitchFrequency: 2
      batchingMaxMessages: 512
      batchingMaxBytes: 512
      initialSequenceId: 0
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      enableMultiSchema: false
      hashingSchemes: [ JavaStringHash ]
      enableEncrypt: false
      encryptionKey:
      producerCryptoFailureAction: FAIL


consumers:
  configs:
    illegalMark:
      services: [ 43.138.111.53:6650 ]
      enableTls: false
      tlsTrustCertsFilePath:
      tlsCertFilePath:
      tlsKeyFilePath:
      tlsAllowInsecureConnection:
      tlsHostnameVerificationEnable:
      listenerName:
      operationTimeoutMillis: 30000
      statsIntervalMillis: 60
      ioThreads: 1
      listenerThreads: 1
      connectionsPerBroker: 2
      useTcpNoDelay: true
      memoryLimitKiloBytes: 1024
      maxConcurrentLookupRequests: 60
      maxLookupRequest: 1000
      maxLookupRedirects: 2
      maxNumberOfRejectedRequestPerConnection: 50
      keepAliveIntervalMillis: 30000
      connectionTimeoutMillis: 10000
      startingBackoffIntervalMillis: 1000
      maxBackoffIntervalMillis: 30000
      enableBusyWait: true
      clockZoneId: Asia/Shanghai
      enableTransaction: false
      enableProxy: false
      proxyServiceUrl:
      proxyProtocol: SNI
      topics: [ illegalMark ]
      topicsPattern:
      subscriptionName: illegalMarkSubscription
      ackTimeoutMillis: 2000
      enableAckReceipt: true
      ackTimeoutTickTimeMillis: 1000
      negativeAckRedeliveryDelayMillis: 100
      subscriptionType: Failover
      subscriptionMode: Durable
      receiverQueueSize: 1000
      acknowledgementsGroupTimeMillis: 100
      replicateSubscriptionState: false
      maxTotalReceiverQueueSizeAcrossPartitions: 5
      consumerName: verifyIllegalMarkConsumer000
      readCompacted: false
      patternAutoDiscoveryPeriodMillis: 1
      priorityLevel: 0
      subscriptionInitialPosition: Latest
      regexSubscriptionMode: PersistentOnly
      autoUpdatePartitions: true
      autoUpdatePartitionsIntervalMillis: 30000
      batchReceivePolicy: DEFAULT_POLICY
      enableRetry: true
      enableBatchIndexAcknowledgment: false
      maxPendingChunkedMessage: 10
      autoAckOldestChunkedMessageOnQueueFull: true
      expireTimeOfIncompleteChunkedMessageMillis: 2000
      poolMessages: false
      enableEncrypt: false
      encryptionKey:
      consumerCryptoFailureAction: FAIL
      enableDeadLetter: true
      deadLetterTopic: illegalMark
      retryLetterTopic: illegalMark
      maxRedeliverCount: 1000
      startMessageIdInclusive: false
      enableBatchReceive: false
      batchReceiveMaxNumMessages: -1
      batchReceiveMaxNumBytes: 10485760
      batchReceiveTimeoutMillis: 100
      pollDurationMills: 1000
      workingThreads: 2
      enableNegativeAcknowledge: true


verify:
  keyLength: 16
  randomType: ALPHANUMERIC
  verifyLength: 16
  minLength: 4
  maxLength: 32
  expiresMillis: 300000
  repeatable: true


imagev:
  keyLength: 16
  keyRandomType: ALPHANUMERIC
  randomType: ALPHANUMERIC
  imageType: png
  verifyLength: 7
  expiresMillis: 300000
  allow: 10
  sendIntervalMillis: 30000

smsv:
  verifyLength: 7
  expiresMillis: 300000
  allow: 1
  sendIntervalMillis: 30000

mailv:
  verifyLength: 7
  expiresMillis: 300000
  allow: 1
  sendIntervalMillis: 30000


image:
  border: true
  borderColor: green
  borderThickness: 1
  producerImpl: com.google.code.kaptcha.impl.DefaultKaptcha
  textProducerImpl: com.google.code.kaptcha.text.impl.DefaultTextCreator
  textProducerChar: blue summer
  textProducerCharLength: 5
  textProducerFontNames: Arial,Courier
  textProducerFontSize: 40
  textProducerFontColor: cyan
  textProducerCharSpace: 2
  noiseImpl: com.google.code.kaptcha.impl.DefaultNoise
  noiseColor: cyan
  obscurificatorImpl: com.google.code.kaptcha.impl.WaterRipple
  wordImpl: com.google.code.kaptcha.text.impl.DefaultWordRenderer
  backgroundImpl: com.google.code.kaptcha.impl.DefaultBackground
  backgroundClearFrom: red
  backgroundClearTo: yellow
  imageWidth: 200
  imageHeight: 50

turing:
  allow: 5
  intervalMillis: 12000000
  targetVerifyTypes: [ SMS,MAIL ]

vtemplate:
  cacheExpiresSecond: 21600


sender:
  smtpAttrs:
    - user: yunfei0221@outlook.com
      password: Fei19890116
      props:
        mail.smtp.auth: true
        mail.smtp.host: smtp.office365.com
        mail.smtp.port: 587
        mail.smtp.ssl: true
        mail.smtp.starttls.enable: true
        mail.debug: false

  core-pool-size: 2
  maximum-pool-size: 8
  keep-alive-seconds: 64
  blocking-queue-capacity: 2048
  thread-name-pre: blue-mail-sender
  bufferSize: 2
  throwableForRetry: [ jakarta.mail.FolderClosedException ]
  retryTimes: 1
  withDKIM: false
  domainKeyFile: classpath:dkim/selector1.pem
  domain: outlook.com
  selector: selector1


debug: false