<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.auth.repository.mapper.MemberRoleRelationMapper">
    <resultMap id="BaseResultMap" type="com.blue.auth.repository.entity.MemberRoleRelation">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , member_id, role_id, create_time, creator
    </sql>

    <insert id="insert" parameterType="com.blue.auth.repository.entity.MemberRoleRelation">
        insert into member_role_relation (id, member_id, role_id, create_time, creator)
        values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT},
                #{createTime,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.auth.repository.entity.MemberRoleRelation">
        insert into member_role_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.auth.repository.entity.MemberRoleRelation">
        update member_role_relation
        set member_id   = #{memberId,jdbcType=BIGINT},
            role_id     = #{roleId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=BIGINT},
            creator     = #{creator,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.auth.repository.entity.MemberRoleRelation">
        update member_role_relation
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from member_role_relation
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insertBatch" parameterType="java.util.List">
        <if test="list != null and list.size > 0">
            INSERT INTO member_role_relation (
            <include refid="Base_Column_List"/>
            ) values
            <foreach collection="list" index="index" item="item" separator=",">
                (
                #{item.id,jdbcType=BIGINT},
                #{item.memberId,jdbcType=BIGINT},
                #{item.roleId,jdbcType=BIGINT},
                #{item.createTime,jdbcType=BIGINT},
                #{item.creator,jdbcType=BIGINT}
                )
            </foreach>
        </if>
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from member_role_relation
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByMemberId" parameterType="java.lang.Long">
        DELETE
        FROM member_role_relation
        WHERE member_id = #{memberId,jdbcType=BIGINT}
    </delete>

    <select id="selectByMemberIdAndRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM member_role_relation FORCE INDEX(idx_member_role)
        WHERE
        member_id = #{memberId,jdbcType=BIGINT}
        AND
        role_id = #{roleId,jdbcType=BIGINT}
        LIMIT 1;
    </select>

    <select id="selectRoleIdsByMemberId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT role_id
        FROM member_role_relation FORCE INDEX(idx_member_role)
        WHERE
            member_id = #{memberId,jdbcType=BIGINT}
    </select>

    <select id="selectByMemberId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        member_role_relation FORCE INDEX(idx_member_role)
        WHERE
        member_id = #{memberId,jdbcType=BIGINT}
    </select>

    <select id="selectByMemberIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        member_role_relation FORCE INDEX(idx_member_role)
        WHERE
        member_id IN
        <foreach collection="memberIds" open="(" close=")" separator="," item="memberId" index="index">
            #{memberId,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="selectByRowsAndMemberId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        member_role_relation FORCE INDEX(idx_member_role)
        WHERE
        member_id = #{memberId,jdbcType=BIGINT}
        LIMIT #{limit,jdbcType=BIGINT},#{rows,jdbcType=BIGINT}
    </select>

    <select id="countByMemberId" resultType="java.lang.Long"
            parameterType="java.lang.Long">
        SELECT COUNT(*)
        FROM member_role_relation FORCE INDEX(idx_member_role)
        WHERE member_id = #{memberId,jdbcType=BIGINT}
    </select>

    <select id="selectByRowsAndRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        member_role_relation
        WHERE
        role_id = #{roleId,jdbcType=BIGINT}
        LIMIT #{limit,jdbcType=BIGINT},#{rows,jdbcType=BIGINT}
    </select>

    <select id="countByRoleId" resultType="java.lang.Long"
            parameterType="java.lang.Long">
        SELECT COUNT(*)
        FROM member_role_relation
        WHERE role_id = #{roleId,jdbcType=BIGINT}
    </select>

</mapper>