<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection -->
<mapper namespace="com.blue.finance.repository.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.blue.finance.repository.entity.Order">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="flow_no" jdbcType="VARCHAR" property="flowNo"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="payment_type" jdbcType="TINYINT" property="paymentType"/>
        <result column="amount" jdbcType="BIGINT" property="amount"/>
        <result column="pay_amount" jdbcType="BIGINT" property="payAmount"/>
        <result column="extra" jdbcType="VARCHAR" property="extra"/>
        <result column="payment_extra" jdbcType="VARCHAR" property="paymentExtra"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="payment_time" jdbcType="BIGINT" property="paymentTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , member_id, order_no, flow_no, type, payment_type, amount, pay_amount, extra,
        payment_extra, detail, status, version, create_time, update_time, payment_time
    </sql>

    <insert id="insert" parameterType="com.blue.finance.repository.entity.Order">
        insert into order (id, member_id, order_no,
                           flow_no, type, payment_type,
                           amount, pay_amount, extra,
                           payment_extra, detail, status,
                           version, create_time, update_time,
                           payment_time)
        values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR},
                #{flowNo,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{paymentType,jdbcType=TINYINT},
                #{amount,jdbcType=BIGINT}, #{payAmount,jdbcType=BIGINT}, #{extra,jdbcType=VARCHAR},
                #{paymentExtra,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
                #{version,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
                #{paymentTime,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.blue.finance.repository.entity.Order">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="flowNo != null">
                flow_no,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="extra != null">
                extra,
            </if>
            <if test="paymentExtra != null">
                payment_extra,
            </if>
            <if test="detail != null">
                detail,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="paymentTime != null">
                payment_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="flowNo != null">
                #{flowNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=BIGINT},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=BIGINT},
            </if>
            <if test="extra != null">
                #{extra,jdbcType=VARCHAR},
            </if>
            <if test="paymentExtra != null">
                #{paymentExtra,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="paymentTime != null">
                #{paymentTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.blue.finance.repository.entity.Order">
        update order
        set member_id     = #{memberId,jdbcType=BIGINT},
            order_no      = #{orderNo,jdbcType=VARCHAR},
            flow_no       = #{flowNo,jdbcType=VARCHAR},
            type          = #{type,jdbcType=TINYINT},
            payment_type  = #{paymentType,jdbcType=TINYINT},
            amount        = #{amount,jdbcType=BIGINT},
            pay_amount    = #{payAmount,jdbcType=BIGINT},
            extra         = #{extra,jdbcType=VARCHAR},
            payment_extra = #{paymentExtra,jdbcType=VARCHAR},
            detail        = #{detail,jdbcType=VARCHAR},
            status        = #{status,jdbcType=TINYINT},
            version       = #{version,jdbcType=INTEGER},
            create_time   = #{createTime,jdbcType=BIGINT},
            update_time   = #{updateTime,jdbcType=BIGINT},
            payment_time  = #{paymentTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.blue.finance.repository.entity.Order">
        update order
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="flowNo != null">
                flow_no = #{flowNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=BIGINT},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=BIGINT},
            </if>
            <if test="extra != null">
                extra = #{extra,jdbcType=VARCHAR},
            </if>
            <if test="paymentExtra != null">
                payment_extra = #{paymentExtra,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from order
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        order
        WHERE
        id IN
        <foreach collection="ids" open="(" close=")" separator="," item="id" index="index">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

</mapper>